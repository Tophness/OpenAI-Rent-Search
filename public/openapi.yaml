openapi: 3.0.1
info:
  title: Rent Search Plugin
  description: A plugin that allows the user to search for an ideal apartment using ChatGPT.
  version: 'v1'
servers:
  - url: https://openai-rent-search.onrender.com
paths:
  /properties/{suburbs}:
    get:
      operationId: getApartments
      summary: |
        Get a list of available apartments in the area the user is searching. After the response, you can view more results from the same search.
      parameters:
        - in: path
          name: suburbs
          schema:
            type: string
          required: true
          description: Suburbs to search for apartments, formatted as suburb+postcode, separated by commas. e.g. fairfield+2165,penrith+2750
        - in: query
          name: surrounding_suburbs
          schema:
            type: string
          required: false
          description: Set to 1 to include surrounding suburbs, or 0 do only use the exact suburbs entered
        - in: query
          name: rent_low
          schema:
            type: integer
          required: false
          description: Minimum price range for an apartment.
        - in: query
          name: rent_high
          schema:
            type: integer
          required: false
          description: Maximum price range for an apartment.
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page of results to request. Starts at 1
        - in: query
          name: bedrooms
          schema:
            type: integer
          required: false
          description: Minimum number of bedrooms user is requesting
        - in: query
          name: bathrooms
          schema:
            type: integer
          required: false
          description: Minimum number of bathrooms user is requesting
        - in: query
          name: car_spaces
          schema:
            type: integer
          required: false
          description: Minimum number of car spaces user is requesting
        - in: query
          name: walk_category
          schema:
            type: integer
          required: false
          description: Walk category user is requesting. 1 = Walker's Paradise, 2 = Very Walkable, 3 = Somewhat Walkable, 4 = Car Dependant
        - in: query
          name: nbn_category
          schema:
            type: integer
          required: false
          description: Whether NBN internet is required. 0 = Not Required, 1 = Required
        - in: query
          name: long_term_lease
          schema:
            type: integer
          required: false
          description: Whether user requires long term lease. 0 = Not Required, 1 = Required
        - in: query
          name: build_to_rent
          schema:
            type: integer
          required: false
          description: Whether user requires build to rent option. 0 = Not Required, 1 = Required
        - in: query
          name: images
          schema:
            type: integer
          required: false
          description: Set to 0 to disable image results or 1 to include image results. Default value is 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getApartmentsResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The reason the request was rejected.
components:
  schemas:
    getApartmentsResponse:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
          imageUrl:
            type: string
            description: URL of the image to be displayed in chat
          price:
            type: string
          features:
            type: array
            items:
              type: string
            description: List of features the property has
          propType:
            type: string
            description: Property type
          description:
            type: string
            description: Description of the property listing
          url:
            type: string
            description: URL of the property listing